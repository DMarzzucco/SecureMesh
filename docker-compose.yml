services:
  db:
    image: postgres
    container_name: data_base_pg
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: data_base
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - compose-bridge

  securemesh:
    environment:
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/gate.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=pass123
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8888
      - ASPNETCORE_HTTPS_PORTS=8888
    container_name: gate.net
    image: ${DOCKER_REGISTRY-}securemesh
    build:
      context: .
      dockerfile: SecureMesh/Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      - auth
    volumes:
      - ./certs/gateway/gate.pfx:/https/gate.pfx
      - ./scripts/wait-for-it.sh:/wait-for-it.sh
    entrypoint: [ "/bin/sh", "-c", "/wait-for-it.sh auth:5090 -- dotnet SecureMesh.dll" ]
    networks:
      - compose-bridge
  user:
    environment:
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetcert.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=pass123
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=4080
      - ASPNETCORE_HTTPS_PORTS=4080
    container_name: user.net
    image: ${DOCKER_REGISTRY-}user
    build:
      context: .
      dockerfile: Service/User/Dockerfile
    ports:
      - "4080:4080"
    volumes:
      - ./certs/user/aspnetcert.pfx:/https/aspnetcert.pfx
    networks:
      - compose-bridge
    depends_on:
      - db
  auth:
    environment:
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/cert.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=pass123
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5090
      - ASPNETCORE_HTTPS_PORTS=5090
    container_name: auth.net
    image: ${DOCKER_REGISTRY-}auth
    build:
      context: .
      dockerfile: Service/Security/Dockerfile
    ports:
      - "5090:5090"
    depends_on:
      - user
    volumes:
      - ./certs/auth/cert.pfx:/https/cert.pfx
      - ./scripts/wait-for-it.sh:/wait-for-it.sh
    entrypoint: [ "/bin/sh", "-c", "/wait-for-it.sh user:4080 -- dotnet Security.dll" ]
    networks:
      - compose-bridge

networks:

  compose-bridge:
    driver: bridge
